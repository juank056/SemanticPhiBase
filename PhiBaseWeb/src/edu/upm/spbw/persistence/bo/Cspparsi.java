package edu.upm.spbw.persistence.bo;

import edu.upm.spbw.utils.Constants;

// Generated 28-feb-2016 11:40:56 by Hibernate Tools 3.4.0.CR1

/**
 * Cspparsi generated by hbm2java
 */
public class Cspparsi implements java.io.Serializable, AbstractBO<String> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String psicparak;
	private String psidparaf;
	private String psitparvf;
	private String psivalpaf;

	public Cspparsi() {
	}

	public Cspparsi(String psicparak, String psidparaf, String psitparvf,
			String psivalpaf) {
		this.psicparak = psicparak;
		this.psidparaf = psidparaf;
		this.psitparvf = psitparvf;
		this.psivalpaf = psivalpaf;
	}

	public String getPsicparak() {
		return this.psicparak;
	}

	public void setPsicparak(String psicparak) {
		this.psicparak = psicparak;
	}

	public String getPsidparaf() {
		return this.psidparaf;
	}

	public void setPsidparaf(String psidparaf) {
		this.psidparaf = psidparaf;
	}

	public String getPsitparvf() {
		return this.psitparvf;
	}

	public void setPsitparvf(String psitparvf) {
		this.psitparvf = psitparvf;
	}

	public String getPsivalpaf() {
		return this.psivalpaf;
	}

	public void setPsivalpaf(String psivalpaf) {
		this.psivalpaf = psivalpaf;
	}

	@Override
	public String getPrimaryKey() {
		return psicparak;
	}

	@Override
	public void prepareObject() {
		if (psicparak == null)
			psicparak = Constants.BLANKS;
		else
			psicparak = psicparak.trim();
		if (psidparaf == null)
			psidparaf = Constants.BLANKS;
		else
			psidparaf = psidparaf.trim();
		if (psitparvf == null)
			psitparvf = Constants.BLANKS;
		else
			psitparvf = psitparvf.trim();
		if (psivalpaf == null)
			psivalpaf = Constants.BLANKS;
		else
			psivalpaf = psivalpaf.trim();
	}

	@Override
	public void prepareToUpdate() {

	}

}
