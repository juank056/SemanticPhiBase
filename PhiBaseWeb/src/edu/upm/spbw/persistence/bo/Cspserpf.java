package edu.upm.spbw.persistence.bo;

import org.apache.commons.lang.exception.ExceptionUtils;

import edu.upm.spbw.persistence.dao.ICspsersiDAO;
import edu.upm.spbw.utils.Constants;
import edu.upm.spbw.utils.LogLogger;
import edu.upm.spbw.utils.SpringAppContext;

// Generated 01-mar-2016 14:25:13 by Hibernate Tools 3.4.0.CR1

/**
 * Cspserpf generated by hbm2java
 */
public class Cspserpf implements java.io.Serializable, AbstractBO<CspserpfId> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private CspserpfId id;
	private String svpiactsf;
	// Descripcion servicio
	private String ssinssiaf;
	/* Booleano */
	private boolean bsvpiactsf;

	public Cspserpf() {
	}

	public Cspserpf(CspserpfId id, String svpiactsf) {
		this.id = id;
		this.svpiactsf = svpiactsf;
	}

	public CspserpfId getId() {
		return this.id;
	}

	public void setId(CspserpfId id) {
		this.id = id;
	}

	public String getSvpiactsf() {
		return this.svpiactsf;
	}

	public void setSvpiactsf(String svpiactsf) {
		this.svpiactsf = svpiactsf;
	}

	@Override
	public CspserpfId getPrimaryKey() {
		return id;
	}

	@Override
	public void prepareObject() {
		if (id == null) {
			id = new CspserpfId(Constants.BLANKS, Constants.BLANKS);
		} else {
			id.setPfucpfuak(id.getPfucpfuak().trim());
			id.setSsicssiak(id.getSsicssiak().trim());
		}
		if (svpiactsf == null)
			svpiactsf = Constants.ZERO;
		else
			svpiactsf = svpiactsf.trim();
		// Booleano
		bsvpiactsf = Constants.ONE.equals(svpiactsf);
		// Revisa si carga servicio del sistema
		if (!Constants.BLANKS.equals(id.getSsicssiak())) {
			try {
				// Dao para cspsersi
				ICspsersiDAO cspsersiDao = SpringAppContext.getAppContext()
						.getBean(ICspsersiDAO.class);
				// Obtiene registro cspsersi
				Cspsersi sersi = cspsersiDao.findById(this.id.getSsicssiak());
				// Asigna nombre
				this.ssinssiaf = sersi.getSsinssiaf();
			} catch (Exception e) {/* Error */
				LogLogger.getInstance(this.getClass()).logger(
						ExceptionUtils.getFullStackTrace(e), LogLogger.ERROR);
			}
		}
	}

	@Override
	public void prepareToUpdate() {
		// Booleano
		svpiactsf = bsvpiactsf ? Constants.ONE : Constants.ZERO;
	}

	/**
	 * @return the ssinssiaf
	 */
	public String getSsinssiaf() {
		return ssinssiaf;
	}

	/**
	 * @param ssinssiaf
	 *            the ssinssiaf to set
	 */
	public void setSsinssiaf(String ssinssiaf) {
		this.ssinssiaf = ssinssiaf;
	}

	/**
	 * @return the bsvpiactsf
	 */
	public boolean isBsvpiactsf() {
		return bsvpiactsf;
	}

	/**
	 * @param bsvpiactsf
	 *            the bsvpiactsf to set
	 */
	public void setBsvpiactsf(boolean bsvpiactsf) {
		this.bsvpiactsf = bsvpiactsf;
	}

}
