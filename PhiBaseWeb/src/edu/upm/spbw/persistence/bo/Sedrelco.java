package edu.upm.spbw.persistence.bo;

import org.apache.commons.lang.exception.ExceptionUtils;

import edu.upm.spbw.persistence.dao.ISeprelcoDAO;
import edu.upm.spbw.utils.Constants;
import edu.upm.spbw.utils.LogLogger;
import edu.upm.spbw.utils.SpringAppContext;

// Generated 28-feb-2016 11:40:56 by Hibernate Tools 3.4.0.CR1

/**
 * Sedrelco generated by hbm2java
 */
public class Sedrelco implements java.io.Serializable, AbstractBO<SedrelcoId> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private SedrelcoId id;
	private String drcvalraf;
	private String cosccosak;
	private String rcocrcoak;
	/* Descripcion relacion */
	private String rcodrcoaf;

	public Sedrelco() {
	}

	public Sedrelco(SedrelcoId id, String drcvalraf, String cosccosak,
			String rcocrcoak) {
		this.id = id;
		this.drcvalraf = drcvalraf;
		this.cosccosak = cosccosak;
		this.rcocrcoak = rcocrcoak;
	}

	public SedrelcoId getId() {
		return this.id;
	}

	public void setId(SedrelcoId id) {
		this.id = id;
	}

	public String getDrcvalraf() {
		return this.drcvalraf;
	}

	public void setDrcvalraf(String drcvalraf) {
		this.drcvalraf = drcvalraf;
	}

	public String getCosccosak() {
		return this.cosccosak;
	}

	public void setCosccosak(String cosccosak) {
		this.cosccosak = cosccosak;
	}

	public String getRcocrcoak() {
		return this.rcocrcoak;
	}

	public void setRcocrcoak(String rcocrcoak) {
		this.rcocrcoak = rcocrcoak;
	}

	@Override
	public SedrelcoId getPrimaryKey() {
		return id;
	}

	@Override
	public void prepareObject() {
		// Campos
		if (this.id == null)
			this.id = new SedrelcoId(0, 0);
		if (this.drcvalraf != null)
			this.drcvalraf = this.drcvalraf.trim();
		else
			this.drcvalraf = Constants.BLANKS;
		if (this.cosccosak != null)
			this.cosccosak = this.cosccosak.trim();
		else
			this.cosccosak = Constants.BLANKS;
		if (this.rcocrcoak != null)
			this.rcocrcoak = this.rcocrcoak.trim();
		else
			this.rcocrcoak = Constants.BLANKS;
		// Descripcion relacion
		this.rcodrcoaf = Constants.BLANKS;
		if (!Constants.BLANKS.equals(this.rcocrcoak)) {
			try {
				// DAO para seprelco
				ISeprelcoDAO seprelcoDao = SpringAppContext.getAppContext()
						.getBean(ISeprelcoDAO.class);
				// Busca registro
				Seprelco relco = seprelcoDao.findById(new SeprelcoId(
						this.cosccosak, this.rcocrcoak));
				if (relco != null)
					this.rcodrcoaf = relco.getRcodrcoaf();
			} catch (Exception e) {/* Error cargando registros */
				LogLogger.getInstance(this.getClass()).logger(
						ExceptionUtils.getFullStackTrace(e), LogLogger.ERROR);
			}
		}
	}

	@Override
	public void prepareToUpdate() {

	}

	/**
	 * @return the rcodrcoaf
	 */
	public String getRcodrcoaf() {
		return rcodrcoaf;
	}

	/**
	 * @param rcodrcoaf
	 *            the rcodrcoaf to set
	 */
	public void setRcodrcoaf(String rcodrcoaf) {
		this.rcodrcoaf = rcodrcoaf;
	}

}
