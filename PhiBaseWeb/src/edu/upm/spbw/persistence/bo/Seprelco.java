package edu.upm.spbw.persistence.bo;

import edu.upm.spbw.utils.Constants;

// Generated 28-feb-2016 11:40:56 by Hibernate Tools 3.4.0.CR1

/**
 * Seprelco generated by hbm2java
 */
public class Seprelco implements java.io.Serializable, AbstractBO<SeprelcoId> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private SeprelcoId id;
	private String rcodrcoaf;
	private String rcordfraf;
	private String rcorangaf;
	private String rcodocuaf;

	public Seprelco() {
	}

	public Seprelco(SeprelcoId id, String rcodrcoaf, String rcordfraf,
			String rcorangaf) {
		this.id = id;
		this.rcodrcoaf = rcodrcoaf;
		this.rcordfraf = rcordfraf;
		this.rcorangaf = rcorangaf;
	}

	public SeprelcoId getId() {
		return this.id;
	}

	public void setId(SeprelcoId id) {
		this.id = id;
	}

	public String getRcodrcoaf() {
		return this.rcodrcoaf;
	}

	public void setRcodrcoaf(String rcodrcoaf) {
		this.rcodrcoaf = rcodrcoaf;
	}

	public String getRcordfraf() {
		return this.rcordfraf;
	}

	public void setRcordfraf(String rcordfraf) {
		this.rcordfraf = rcordfraf;
	}

	public String getRcorangaf() {
		return this.rcorangaf;
	}

	/**
	 * @return the rcodocuaf
	 */
	public String getRcodocuaf() {
		return rcodocuaf;
	}

	/**
	 * @param rcodocuaf
	 *            the rcodocuaf to set
	 */
	public void setRcodocuaf(String rcodocuaf) {
		this.rcodocuaf = rcodocuaf;
	}

	public void setRcorangaf(String rcorangaf) {
		this.rcorangaf = rcorangaf;
	}

	@Override
	public SeprelcoId getPrimaryKey() {
		return id;
	}

	@Override
	public void prepareObject() {
		// Campos
		if (this.id == null)
			this.id = new SeprelcoId(Constants.BLANKS, Constants.BLANKS);
		else {
			this.id.setCosccosak(this.id.getCosccosak().trim());
			this.id.setRcocrcoak(this.id.getRcocrcoak().trim());
		}
		if (this.rcodrcoaf == null)
			this.rcodrcoaf = Constants.BLANKS;
		else
			this.rcodrcoaf = this.rcodrcoaf.trim();
		if (this.rcordfraf == null)
			this.rcordfraf = Constants.BLANKS;
		else
			this.rcordfraf = this.rcordfraf.trim();
		if (this.rcorangaf == null)
			this.rcorangaf = Constants.BLANKS;
		else
			this.rcorangaf = this.rcorangaf.trim();
		if (this.rcodocuaf == null)
			this.rcodocuaf = Constants.BLANKS;
		else
			this.rcodocuaf = this.rcodocuaf.trim();
	}

	@Override
	public void prepareToUpdate() {

	}

}
